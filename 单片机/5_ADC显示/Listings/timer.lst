C51 COMPILER V9.57.0.0   TIMER                                                             05/16/2019 10:28:44 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Objects\timer.obj
COMPILER INVOKED BY: D:\software\keil\C51\BIN\C51.EXE timer.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\timer.lst) TABS(2) OBJECT(.\Objects\timer.obj)

line level    source

   1          /***************李海*************/
   2          #include <stc15w.h>
   3          #include <intrins.h>
   4          
   5          /****************************** 用户定义宏 ***********************************/
   6          #define   LED_TYPE  0x00  //定义LED类型, 0x00--共阴, 0xff--共阳 秒
   7          
   8          /************** 预定义 **************/
   9          typedef   unsigned char u8;
  10          typedef   unsigned int  u16;
  11          typedef   unsigned long u32; 
  12          
  13          /*************  本地常量声明  **************/
  14          u8 code t_display[]={           //标准字库
  15          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  16            0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
  17          //black  -     H    J  K    L    N  o   P  U     t    G    Q    r   M    y
  18            0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
  19            0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46,0x40}; //0. 1. 2. 3. 4. 5. 6. 7. 8. 9. -1
  20          
  21          u8 code T_COM[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};    //位码
  22          
  23          
  24          /*************  IO口定义  **************/
  25          sbit    SDA = P1^1;
  26          sbit    SCL = P1^0;
  27          sbit  LED7 = P1^7;
  28          sbit  LED8 = P1^6;
  29          sbit  LED9 = P4^7;
  30          sbit  LED10 = P4^6;
  31          sbit  P_HC595_SER   = P4^0; //pin 14  SER   data input
  32          sbit  P_HC595_RCLK  = P5^4; //pin 12  RCLk  store (latch) clock
  33          sbit  P_HC595_SRCLK = P4^3; //pin 11  SRCLK Shift data clock
  34          sbit  save = P3^3;      //保存数据按键
  35          
  36          /*************  本地变量声明  **************/
  37          bit B_2ms;      //2ms标志位
  38          u8  LED_8[8];   //显示缓冲
  39          u8  sun_8=0;    //显示位索引
  40          u8  key_z;      //键值
  41          u16 adc;        
  42          
  43          /********************** 显示时钟函数 ************************/
  44          void  DisplayRTC(void)
  45          {
  46   1        LED_8[0] = adc / 1000;
  47   1        LED_8[1] = (adc / 100) % 10;
  48   1        LED_8[2] = (adc / 10) % 10;
  49   1        LED_8[3] = adc % 10;
  50   1        LED_8[4] = 0x10;
  51   1        LED_8[5] = 0X10;
  52   1        LED_8[6] = ((adc * 49) / 10000) + 32;
  53   1        LED_8[7] = ((adc * 49) / 1000) % 10;
  54   1      }
C51 COMPILER V9.57.0.0   TIMER                                                             05/16/2019 10:28:44 PAGE 2   

  55          
  56          ///******************2毫秒延时程序********************/
  57          //void delay2us()   //@11.0592MHz
  58          //{
  59          //  unsigned char i;    
  60          //  i = 3;
  61          //  while (--i);
  62          //}
  63          
  64          
  65          /*************** 定时器初始化 *****************/
  66          void Timer0Init(void)   //2毫秒@11.0592MHz
  67          {
  68   1        AUXR |= 0x80;   //定时器时钟1T模式
  69   1        TMOD &= 0xF0;   //设置定时器模式
  70   1        TL0 = 0x9A;   //设置定时初值
  71   1        TH0 = 0xA9;   //设置定时初值
  72   1        TF0 = 0;    //清除TF0标志
  73   1        TR0 = 1;    //定时器0开始计时
  74   1        ET0=1;
  75   1      }
  76          
  77          /**************** 向HC595发送一个字节函数 ******************/
  78          void Send_595(u8 dat)
  79          {   
  80   1        u8  i;
  81   1        for(i=0; i<8; i++)
  82   1        {
  83   2          dat <<= 1;
  84   2          P_HC595_SER   = CY;
  85   2          P_HC595_SRCLK = 1;
  86   2          P_HC595_SRCLK = 0;
  87   2        }
  88   1      }
  89          
  90          /********************** 显示扫描函数 ************************/
  91          void DisplayScan(void)
  92          { 
  93   1        Send_595(~LED_TYPE ^ T_COM[sun_8]);       //输出位码
  94   1        Send_595( LED_TYPE ^ t_display[LED_8[sun_8]]);  //输出段码
  95   1      
  96   1        P_HC595_RCLK = 1;
  97   1        P_HC595_RCLK = 0;               //锁存输出数据
  98   1        if(++sun_8 >= 8)  sun_8 = 0;          //8位结束回0
  99   1      }
 100          
 101          /*********************读adc**********************************/
 102          void ADC_S(void)
 103          {
 104   1          ADC_CONTR = 0xEC;
 105   1          _nop_();
 106   1          _nop_();
 107   1          _nop_();
 108   1          _nop_();
 109   1          while(~ADC_CONTR & 0x10)
 110   1      //    adc = (u16)(ADC_RES & 3);
 111   1      //    adc = (adc << 8) | ADC_RESL;  
 112   1      //    ADC_CONTR = 0x84;
 113   1          adc = ADC_RES;
 114   1          adc = (adc << 2) | (ADC_RESL & 3);
 115   1          DisplayRTC();
 116   1      }
C51 COMPILER V9.57.0.0   TIMER                                                             05/16/2019 10:28:44 PAGE 3   

 117          
 118          /********************** Timer0 2ms中断函数 ************************/
 119          void timer0 (void) interrupt 1
 120          {
 121   1        DisplayScan();  //1ms扫描显示
 122   1        B_2ms = 1;    //2ms标志位
 123   1      }
 124          
 125          /************************ 主函数 **********************************/
 126          void main(void)
 127          {
 128   1        u8 B_10ms = 0;
 129   1        P0M0 = 0;   // IO口初始化
 130   1        P0M1 = 0;
 131   1        
 132   1        Timer0Init();   // 定时器初始化
 133   1        EA = 1;     //总中断开关
 134   1        ET0 = 1;    //定时器0中断允许
 135   1        
 136   1        P1ASF = 0x10;   //设置P1.4为模拟量输入功能
 137   1        ADC_CONTR = 0x81; //打开A/D转换电源，设置输入通道
 138   1      //  AUXR1 ^= 0x04;
 139   1        _nop_();
 140   1        _nop_();
 141   1        _nop_();
 142   1        _nop_();
 143   1        
 144   1        while(1)
 145   1        {
 146   2          if(B_2ms)
 147   2          {
 148   3            B_2ms = 0;
 149   3            if(++B_10ms >= 5)   //10ms扫描一次ADC键盘
 150   3            {
 151   4              B_10ms = 0;
 152   4              ADC_S();
 153   4            }
 154   3          }
 155   2        } 
 156   1      }
 157          
 158          
 159          
 160          
 161          
 162          
 163          
 164          
 165          
 166          
 167          
 168          
 169          
 170          
 171          
 172          
 173          
 174          
 175          
 176          
 177          
 178          
C51 COMPILER V9.57.0.0   TIMER                                                             05/16/2019 10:28:44 PAGE 4   

 179          
 180          
 181          
 182          
 183          
 184          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    328    ----
   CONSTANT SIZE    =     52    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
