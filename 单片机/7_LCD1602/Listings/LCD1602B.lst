C51 COMPILER V9.57.0.0   LCD1602B                                                          05/21/2019 16:22:07 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE LCD1602B
OBJECT MODULE PLACED IN .\Objects\LCD1602B.obj
COMPILER INVOKED BY: D:\software\keil\C51\BIN\C51.EXE LCD1602B.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\LCD1602B.lst) TABS(2) OBJECT(.\Objects\LCD1602B.obj)

line level    source

   1          
   2          /*---------------------------------------------------------------------*/
   3          /* --- STC MCU International Limited ----------------------------------*/
   4          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   5          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   8          /* --- Web: www.GXWMCU.com --------------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了宏晶科技的资料及程序   */
  11          /*---------------------------------------------------------------------*/
  12          
  13          
  14          //8位数据访问方式 LCD1602   标准程序  梁工编写  2002-12-21
  15          
  16          #include  "stc15w.h"
  17          #include  "delay.h"
  18          
  19          #define LineLenth 16    //16x2
  20          //#define LineLenth 20    //20x2
  21          //#define LineLenth 40    //40x2
  22          
  23          //this programme is used for LCD module 16x2 20x2 or 40x2.
  24          
  25          /*************  Pin define  *****************************************************/
  26          
  27          sfr   LCD_BUS = 0x80; //P0--0x80, P1--0x90, P2--0xA0, P3--0xB0
  28          
  29          sbit  LCD_B7  = LCD_BUS^7;  //D7 -- Pin 14    LED- -- Pin 16 
  30          sbit  LCD_B6  = LCD_BUS^6;  //D6 -- Pin 13    LED+ -- Pin 15
  31          sbit  LCD_B5  = LCD_BUS^5;  //D5 -- Pin 12    Vo   -- Pin 3
  32          sbit  LCD_B4  = LCD_BUS^4;  //D4 -- Pin 11    VDD  -- Pin 2
  33          sbit  LCD_B3  = LCD_BUS^3;  //D3 -- Pin 10    VSS  -- Pin 1
  34          sbit  LCD_B2  = LCD_BUS^2;  //D2 -- Pin  9
  35          sbit  LCD_B1  = LCD_BUS^1;  //D1 -- Pin  8
  36          sbit  LCD_B0  = LCD_BUS^0;  //D0 -- Pin  7
  37          
  38          sbit  LCD_ENA = P2^7; //Pin 6
  39          sbit  LCD_RW  = P2^6; //Pin 5 //LCD_RS   R/W   DB7--DB0        FOUNCTION
  40          sbit  LCD_RS  = P2^5; //Pin 4 //  0   0   INPUT      write the command to LCD model
  41                          //  0   1     OUTPUT     read BF and AC pointer from LCD model
  42                          //  1   0     INPUT      write the data to LCD  model
  43                          //  1   1     OUTPUT     read the data from LCD model
  44          
  45          /******************************************************************************
  46                           HD44780U    LCD_MODUL DRIVE PROGRAMME
  47          *******************************************************************************
  48          
  49          total 2 lines, 16x2= 32
  50          first line address:  0~15
  51          second line address: 64~79
  52          
  53          total 2 lines, 20x2= 40
  54          first line address:  0~19
C51 COMPILER V9.57.0.0   LCD1602B                                                          05/21/2019 16:22:07 PAGE 2   

  55          second line address: 64~83
  56          
  57          total 2 lines, 40x2= 80
  58          first line address:  0~39
  59          second line address: 64~103
  60          */
  61          
  62          #define C_CLEAR     0x01    //clear LCD
  63          #define C_HOME      0x02    //cursor go home
  64          #define C_CUR_L     0x04    //cursor shift left after input
  65          #define C_RIGHT     0x05    //picture shift right after input
  66          #define C_CUR_R     0x06    //cursor shift right after input
  67          #define C_LEFT      0x07    //picture shift left after input
  68          #define C_OFF       0x08    //turn off LCD
  69          #define C_ON        0x0C    //turn on  LCD
  70          #define C_FLASH     0x0D    //turn on  LCD, flash 
  71          #define C_CURSOR    0x0E    //turn on  LCD and cursor
  72          #define C_FLASH_ALL   0x0F    //turn on  LCD and cursor, flash
  73          #define C_CURSOR_LEFT 0x10    //single cursor shift left
  74          #define C_CURSOR_RIGHT  0x10    //single cursor shift right
  75          #define C_PICTURE_LEFT  0x10    //single picture shift left
  76          #define C_PICTURE_RIGHT 0x10    //single picture shift right
  77          #define C_BIT8      0x30    //set the data is 8 bits
  78          #define C_BIT4      0x20    //set the data is 8 bits
  79          #define C_L1DOT7    0x30    //8 bits,one line 5*7  dots
  80          #define C_L1DOT10   0x34    //8 bits,one line 5*10 dots
  81          #define C_L2DOT7    0x38    //8 bits,tow lines 5*7 dots
  82          #define C_4bitL2DOT7  0x28    //4 bits,tow lines 5*7 dots
  83          #define C_CGADDRESS0  0x40    //CGRAM address0 (addr=40H+x)
  84          #define C_DDADDRESS0  0x80    //DDRAM address0 (addr=80H+x)
  85          
  86          
  87          #define LCD_DelayNop()  NOP(15)
  88          
  89          #define   LCD_BusData(dat)  LCD_BUS = dat
  90          
  91          
  92          void  CheckBusy(void)
  93          {
  94   1        u16 i;
*** ERROR C202 IN LINE 94 OF LCD1602B.c: 'u16': undefined identifier
*** ERROR C141 IN LINE 94 OF LCD1602B.c: syntax error near 'i'
  95   1        for(i=0; i<5000; i++) {if(!LCD_B7)  break;}   //check the LCD busy or not. With time out
*** ERROR C202 IN LINE 95 OF LCD1602B.c: 'i': undefined identifier
  96   1      //  while(LCD_B7);      //check the LCD busy or not. Without time out
  97   1      }
  98          
  99          /**********************************************/
 100          void IniSendCMD(u8 cmd)   //write the command to LCD
*** ERROR C141 IN LINE 100 OF LCD1602B.c: syntax error near 'cmd', expected ')'
 101          {
 102   1        LCD_RW = 0;
 103   1        LCD_BusData(cmd);
*** ERROR C202 IN LINE 103 OF LCD1602B.c: 'cmd': undefined identifier
 104   1        LCD_DelayNop();
 105   1        LCD_ENA = 1;
 106   1        LCD_DelayNop();
 107   1        LCD_ENA = 0;
 108   1        LCD_BusData(0xff);
 109   1      }
 110          
 111          /**********************************************/
C51 COMPILER V9.57.0.0   LCD1602B                                                          05/21/2019 16:22:07 PAGE 3   

 112          void Write_CMD(u8 cmd)    //write the command to LCD
 113          {
 114   1        LCD_RS  = 0;
 115   1        LCD_RW = 1;
 116   1        LCD_BusData(0xff);
 117   1        LCD_DelayNop();
 118   1        LCD_ENA = 1;
 119   1        CheckBusy();      //check the LCD busy or not.
 120   1        LCD_ENA = 0;
 121   1        LCD_RW = 0;
 122   1        
 123   1        LCD_BusData(cmd);
 124   1        LCD_DelayNop();
 125   1        LCD_ENA = 1;
 126   1        LCD_DelayNop();
 127   1        LCD_ENA = 0;
 128   1        LCD_BusData(0xff);
 129   1      }
 130          
 131          /**********************************************/
 132          void Write_DIS_Data(u8 dat)   //write the display data to LCD
 133          {
 134   1        LCD_RS = 0;
 135   1        LCD_RW = 1;
 136   1      
 137   1        LCD_BusData(0xff);
 138   1        LCD_DelayNop();
 139   1        LCD_ENA = 1;
 140   1        CheckBusy();      //check the LCD busy or not.
 141   1        LCD_ENA = 0;
 142   1        LCD_RW = 0;
 143   1        LCD_RS  = 1;
 144   1      
 145   1        LCD_BusData(dat);
 146   1        LCD_DelayNop();
 147   1        LCD_ENA = 1;
 148   1        LCD_DelayNop();
 149   1        LCD_ENA = 0;
 150   1        LCD_BusData(0xff);
 151   1      }
 152          
 153          
 154          /*********  初始化函数  **************************/
 155          void Initialize_LCD(void)   //intilize LCD, input none, output none
 156          {
 157   1        LCD_ENA = 0;
 158   1        LCD_RS  = 0;
 159   1        LCD_RW = 0;
 160   1      
 161   1        delay_ms(100);
 162   1        IniSendCMD(C_BIT8);   //set the data is 8 bits
 163   1      
 164   1        delay_ms(10);
 165   1        IniSendCMD(C_BIT8);   //set the data is 8 bits
 166   1      
 167   1        delay_ms(10);
 168   1        IniSendCMD(C_L2DOT7);   //tow lines 5*7 dots
 169   1      
 170   1        delay_ms(6);
 171   1        Write_CMD(C_CLEAR);   //clear LCD RAM
 172   1        Write_CMD(C_CUR_R);   //Curror Shift Right
 173   1      //  Write_CMD(C_FLASH_ALL); //turn on  LCD and cursor, flash
C51 COMPILER V9.57.0.0   LCD1602B                                                          05/21/2019 16:22:07 PAGE 4   

 174   1        Write_CMD(C_ON);    //turn on  LCD
 175   1      //  Write_AC(1,1);      //set the AC pointer
 176   1      }
 177          
 178          
 179          /**********************************************/
 180          void Write_AC(u8 hang,u8 lie) //write the AC Pointer address to LCD
 181          {
 182   1      //  if((lie == 0) || (lie > LineLenth)) return;
 183   1        if(hang == 1)     Write_CMD((lie-1)  | 0x80);
 184   1        else if(hang == 2)    Write_CMD((lie+63) | 0x80);
 185   1      }
 186          
 187          /**********************************************/
 188          void ClearLine(u8 hang)
 189          {
 190   1        u8 i;
 191   1        if(hang == 1) Write_AC(1,1);  //set the AC pointer
 192   1        if(hang == 2) Write_AC(2,1);  //set the AC pointer
 193   1        for(i=0; i<LineLenth; i++)  Write_DIS_Data(' ');
 194   1      }
 195          
 196          
 197          /****************** 写一个字符串，指定行、列和字符串首地址 ****************************/
 198          void PutString(u8 hang,u8 lie,u8 *puts)
 199          {
 200   1      //  if((hang == 0) || (hang > 2))   return; 
 201   1      //  if((lie == 0) || (lie > LineLenth)) return;
 202   1        if(hang == 1) Write_CMD((lie-1)  | 0x80);
 203   1        else      Write_CMD((lie+63) | 0x80);
 204   1        for ( ;  *puts != 0;  puts++)   //遇到停止符0结束
 205   1        {
 206   2          if(++lie > 20)  break;
 207   2          Write_DIS_Data(*puts);
 208   2        }
 209   1      }
 210          
 211          
 212          /****************** 写一个字符，指定行、列和字符 ****************************/
 213          void  WriteChar(u8 hang,u8 lie,u8 dat)
 214          {
 215   1      //  if((hang == 0) || (hang > 2))   return; 
 216   1      //  if((lie == 0) || (lie > LineLenth)) return;
 217   1        if(hang == 1) Write_CMD((lie-1)  | 0x80);
 218   1        else      Write_CMD((lie+63) | 0x80);
 219   1        Write_DIS_Data(dat);
 220   1      }
 221          
 222          
 223          
 224          //******************** LCD40 Module END ***************************
 225          

C51 COMPILATION COMPLETE.  0 WARNING(S),  5 ERROR(S)
